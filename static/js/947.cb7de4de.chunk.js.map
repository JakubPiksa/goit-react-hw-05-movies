{"version":3,"file":"static/js/947.cb7de4de.chunk.js","mappings":"iOAuDA,UAnDqB,WACnB,IAAQA,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAA0BE,EAAAA,EAAAA,UAAS,MAAnC,eAAOC,EAAP,KAAcC,EAAd,KAuBA,IArBAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAiB,mCAAG,6GAECC,EAAAA,EAAAA,IAAA,6CACiBP,GACtC,CACEQ,OAAQ,CACNC,QAAS,sCANO,OAEhBC,EAFgB,OAWtBN,EAASM,EAASC,MAXI,gDAatBC,QAAQC,MAAM,sCAAd,MAbsB,yDAAH,qDAiBvBP,GACD,GAAE,CAACN,KAECG,EACH,OAAO,wCAGT,IAAMW,EAAS,yCAAqCX,EAAMY,aAE1D,OACE,4BACE,SAAC,KAAD,CAAMC,GAAE,UAAR,sBACA,wBAAKb,EAAMc,SACX,uBAAId,EAAMe,WACTf,EAAMY,aACL,gBAAKI,IAAKL,EAAWM,IAAKjB,EAAMc,SAEhC,kDAEF,0CAAkBd,EAAMkB,iBACxB,oCAAYlB,EAAMmB,iBAClB,oCAAYnB,EAAMoB,OAAOC,KAAI,SAACC,GAAD,OAAWA,EAAMC,IAAjB,IAAuBC,KAAK,UACzD,qCAAaxB,EAAMyB,QAAnB,eACA,SAAC,KAAD,CAAMZ,GAAE,kBAAahB,EAAb,SAAR,wBACA,SAAC,KAAD,CAAMgB,GAAE,kBAAahB,EAAb,YAAR,4BAGL,C","sources":["components/MovieDetails/MovieDetails.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { Link, useParams } from 'react-router-dom';\n\nconst MovieDetails = () => {\n  const { movieId } = useParams();\n  const [movie, setMovie] = useState(null);\n\n  useEffect(() => {\n    const fetchMovieDetails = async () => {\n      try {\n        const response = await axios.get(\n          `https://api.themoviedb.org/3/movie/${movieId}`,\n          {\n            params: {\n              api_key: '610d75fe699fa5ab11363f277512029e', // Replace with your API key\n            },\n          }\n        );\n\n        setMovie(response.data);\n      } catch (error) {\n        console.error('Error while fetching movie details:', error);\n      }\n    };\n\n    fetchMovieDetails();\n  }, [movieId]);\n\n  if (!movie) {\n    return <div>Loading...</div>;\n  }\n\n  const posterUrl = `https://image.tmdb.org/t/p/w500${movie.poster_path}`;\n\n  return (\n    <div>\n      <Link to={`/movies`}>Go Back</Link>\n      <h1>{movie.title}</h1>\n      <p>{movie.overview}</p>\n      {movie.poster_path ? (\n        <img src={posterUrl} alt={movie.title} />\n      ) : (\n        <div>No poster available</div>\n      )}\n      <p>Release Date: {movie.release_date}</p>\n      <p>Rating: {movie.vote_average}</p>\n      <p>Genres: {movie.genres.map((genre) => genre.name).join(', ')}</p>\n      <p>Runtime: {movie.runtime} minutes</p>\n      <Link to={`/movies/${movieId}/cast`}>View Cast</Link>\n      <Link to={`/movies/${movieId}/reviews`}>View Reviews</Link>\n    </div>\n  );\n};\n\nexport default MovieDetails;\n"],"names":["movieId","useParams","useState","movie","setMovie","useEffect","fetchMovieDetails","axios","params","api_key","response","data","console","error","posterUrl","poster_path","to","title","overview","src","alt","release_date","vote_average","genres","map","genre","name","join","runtime"],"sourceRoot":""}